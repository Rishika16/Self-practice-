# Setting the working directory - 
getwd()
"C:/Users/rishika.sharma/Documents/MICA- Term 4/AMMA"
setwd("C:/Users/rishika.sharma/Documents/MICA- Term 4/AMMA") #This working directory is the folder where all the bank data is stored

# reading client datasets
df.client <- read.csv('train-5.csv')
str(df.client)
view(df.client)

View(df.client)
summary(df.client)
head(df.client)
df.client_final <- df.client[c("Survived", "Pclass", "Sex", "Age", "Parch")]
is.na(df.client_final)=29.70
df.client_final$Age[is.na(df.client_final$Age)] = mean(df.client_final$Age, na.rm = TRUE)
  # split the data into training and test
  set.seed(1234) # for reproducibility
  df.client_final$rand <- runif(nrow(df.client_final))
  df.train <- df.client_final[df.client_final$rand <= 0.7,]
  df.test <- df.client_final[df.client_final$rand > 0.7,]
  nrow(df.train)
  nrow(df.test)
  hist(df.client_final$Age)
  CrossTable(df.client_final$Survived)
  CrossTable(df.train$Survived)
  CrossTable(df.test$Survived)
  titanic_equ = lm(formula = Survived ~ Pclass+Sex+Age+Parch,data=df.client_final)
  vif(titanic_equ)
  
  ###understanding normality of the variables
  hist(df.client_final$Age)
  
  
  ###Crosstabluation of dependent categorical variable
  CrossTable(df.client_final$Survived)
  CrossTable(df.train$Survived)
  CrossTable(df.testSurvived)
  
  ###Checking multicolinearity
  titanic_equ= lm(formula = Survived ~ Pclass+Sex+Age+Parch,data = df.client_final)
  vif(titanic_equ)
  
  ###Running a logistic regression model
  titanic_equ_final= glm(formula = Survived ~ Pclass+Sex+Age+Parch,data = df.test,family = binomial)
  summary(titanic_equ_final)
  
  ###removing variables which are not significant when confidence interval in 95% (p value = 0.05)
  new_titanic_equ = glm(formula = Survived ~ Pclass+Sex+Age,data = df.train,family = binomial)
  summary(new_titanic_equ)
  
  ###probabilities of training data 
  df.train$prob = predict(new_titanic_equ,type=c("response"))
  df.train$pred = ifelse(titanic_prob>=.5,'pred_yes','pred_no')
  View(df.train)
  
  ###Roc curve of training data
  titanic_train_roc <- roc(Survived ~ prob , data = df.train)
  plot(titanic_train_roc)
  auc(titanic_train_roc)
  
  
  ### confusion matrix of training data 
  table(df.train$ypred,df.train$Survived)
  
  
  ### index for measuring trainning data
  accuracy_train = (343+177)/(343+177+63+70)
  print(accuracy_train)
  precision_train = (177/(177+70))
  print(precision_train)
  Recall_train = (177/(177+63))
  print(Recall_train)
  f1_train = (2*0.7165992*0.7375)/(0.7165992+0.7375)
  print(f1_train)
  
  
  ###_____________________________________________
  
  ###probabilities of test data 
  df.test$prob= predict(new_titanic_equ,titanic_test,c=("response"))
  df_test$ypred = ifelse(Titanic_test_predict>=.5,'pred_yes','pred_no')
  View(titanic_test)
  
  
  ###Roc curve of test data
  titanic_test_roc <- roc(Survived ~ prob , data = df_test)
  plot(titanic_test_roc)
  auc(titanic_test_roc)
  
  ### confusion matrix of test data 
  table(df_test$ypred,df_test$Survived)
  
  ### index for measuring trainning data
  accuracy_test = (46+134)/(46+134+9+49)
  print(accuracy_test)
  precision_test = (46/(46+49))
  print(precision_test)
  Recall_test = (343/(343+9))
  print(Recall_test)
  f1_test = (2* 0.4842105*0.9744318)/(0.4842105+0.9744318)
  print(f1_test)
  
  ###________________________________________________________________________
  
  
  ##predicting survival of Jack and Rose
  survival=read.csv("book1.csv")
  predict_survival= predict(new_titanic_equ,survival,c=("response"))
  survival$pred = ifelse(predict_survival>=.5,'pred_yes','pred_no')
  View(survival)
  
  
  
